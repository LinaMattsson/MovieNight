package movieNight.controllers;

import movieNight.OmdbConnection;
import movieNight.entities.Movie;
//import movieNight.repositories.MovieRepository;
import movieNight.repositories.MovieRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.ArrayList;
import java.util.List;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/search") // This means URL's start with /demo (after Application path)
public class MovieController {
    @Autowired // This means to get the bean called movieRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MovieRepository movieRepository;
    private OmdbConnection omdbConnection = new OmdbConnection();

    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody String addNewMovie(@RequestParam String id){
        //@RequestParam String id, @RequestParam String title, @RequestParam String year,@RequestParam String plot,@RequestParam String genre,@RequestParam String runtime,@RequestParam String rating,@RequestParam String language) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Movie m = omdbConnection.getMoviesById(id);
//        m.setId(id);
//        m.setTitle("lina");
//        m.setYear("lina");
//        m.setPlot("lina");
//        m.setGenre("lina");
//        m.setRuntime("lina");
//        m.setRating("lina");
//        m.setLanguage("lina");
        movieRepository.save(m);
        return "Saved";
    }
    @GetMapping(path="/hej")
    public @ResponseBody String getHej(){
        return "hej";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Movie> getAllMovies() {
        // This returns a JSON or XML with the users
        return movieRepository.findAll();
    }
    @GetMapping(path="/byTitle")
    public @ResponseBody List<Movie> showMoviesByTitle(@RequestParam String title){
        List<Movie> movieList = new ArrayList<>();
        movieList = omdbConnection.getMoviesByName(title);
        return movieList;
    }
//    @GetMapping(path="/byYear")
//    public @ResponseBody List<Movie> showMoviesByYear(@RequestParam String year){
//        List<Movie> movieList = new ArrayList<>();
//        movieList = omdbConnection.getMoviesByYear(year);
//        return movieList;
//    }
}