package testMovieNight.controllers;

import testMovieNight.entities.RESTLogg;
import testMovieNight.repositories.RESTLoggRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo1") // This means URL's start with /demo (after Application path)
public class RESTLoggController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private RESTLoggRepository restLoggRepository;

    @GetMapping(path="/add1") // Map ONLY GET Requests
    public @ResponseBody String addNewRESTLogg (@RequestParam Integer id, @RequestParam String successOrError, @RequestParam String IPAddress) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        RESTLogg r = new RESTLogg();
        r.setId(id);
        r.setSuccessOrError(successOrError);
        r.setIPAddress(IPAddress);
        restLoggRepository.save(r);
        return "Saved";
    }

    @GetMapping(path="/hej1")
    public @ResponseBody String getHej(){
        return "hej";
    }
    @GetMapping(path="/all1")
    public @ResponseBody Iterable<RESTLogg> getAllMovies() {
        // This returns a JSON or XML with the users
        return restLoggRepository.findAll();
    }
}